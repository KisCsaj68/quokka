services:
  rabbitmq:
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "15692:15692"
    image: rabbitmq:3-management
    hostname: quokka-rabbit
    expose:
      - "15672"
    healthcheck:
      test: rabbitmq-diagnostics check_running
      interval: 5s
      timeout: 60s
      retries: 10
  postgres:
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - "./volumes/postgres:/var/lib/postgresql/data"
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=asdqwe
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  frontend:
    container_name: frontend
    image: quokka/frontend
    ports:
      - "3000:3000"
  api:
    container_name: api
    ports:
      - "8080:8080"
    image: quokka/api
    depends_on:
      - postgres
  oms:
    container_name: oms
    ports:
      - "9000:9000"
    healthcheck:
      test:  ["CMD-SHELL", "curl -s --fail http://localhost:9000/healthz && exit 0 || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 100
      start_period: 30s
    image: quokka/oms
    depends_on:
      persister:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
  assetcache:
    container_name: assetcache
    ports:
      - "8000:8000"
    image: quokka/assetcache
    healthcheck:
      test: ["CMD-SHELL", "curl -s --fail http://localhost:8000/healthz && exit 0 || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 100
      start_period: 30s
    depends_on:
      oms:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  persister:
#    container_name: persister
    deploy:
      replicas: 4
    ports:
      - "9001"
    image: quokka/persister
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
  prometheus:
    container_name: prometheus
    ports:
      - "9090:9090"
    image: prom/prometheus:latest
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./volumes/prometheus_data:/prometheus"
  grafana:
    container_name: grafana
    ports:
      - "4000:3000"
    image: grafana/grafana-oss
    volumes:
      - "./volumes/grafana_storage:/var/lib/grafana"