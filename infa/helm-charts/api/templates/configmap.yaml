apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "api.fullname" . }}
data:
  application.properties: |
    # database connection details
    spring.datasource.driver-class-name = org.postgresql.Driver
    spring.datasource.url = jdbc:postgresql://{{ .Values.pg.host }}.{{ .Release.Namespace }}.svc:{{ .Values.pg.port }}/quokka
    spring.datasource.username = {{ .Values.pg.user }}
    spring.datasource.password = {{ .Values.pg.password }}

    # JPA details
    spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
    spring.jpa.show-sql = false
    spring.jpa.hibernate.ddl-auto = none
    spring.h2.console.enabled = true
    spring.h2.console.path = /h2-console
    spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    spring.jpa.properties.hibernate.format_sql = true

    # asset cache address
    quokka.service.assetcache.address = http://{{ .Values.services.assetCache.host }}.{{ .Release.Namespace }}.svc:{{ .Values.services.assetCache.port }}
    quokka.service.assetcache.endpoint = {{ .Values.services.assetCache.endpoint }}

    #logging.level.org.springframework.security = DEBUG

    # oms address
    quokka.service.oms.address = http://{{ .Values.services.oms.host }}.{{ .Release.Namespace }}.svc:{{ .Values.services.oms.port }}
    quokka.service.oms.endpoint = {{ .Values.services.oms.endpoint }}

    # api auth address
    quokka.controller.auth.endpoint = {{ .Values.api.auth.endpoint }}

    # JWT
    application.jwt.secretKey = {{ .Values.api.auth.jwt.secretKey }}
    application.jwt.tokenPrefix = {{ .Values.api.auth.jwt.prefix }} 
    application.jwt.tokenExpirationAfterDays = {{ .Values.api.auth.jwt.expirationDays }}